import cv2
import mediapipe as mp
import pyautogui

# Initialize VideoCapture
cap = cv2.VideoCapture(0)

# Initialize Hand Detector
hand_detector = mp.solutions.hands.Hands()
drawing_utils = mp.solutions.drawing_utils

# Get screen size
screen_width, screen_height = pyautogui.size()

# Initialize thumb and index positions
thumb_x = 0
thumb_y = 0
index_x = 0
index_y = 0

# Initialize click flag
click_flag = False

# Main loop
while True:
    # Read frame from webcam
    ret, frame = cap.read()
    if not ret:
        break
    
    # Flip frame horizontally
    frame = cv2.flip(frame, 1)
    
    # Extract frame dimensions
    frame_height, frame_width, _ = frame.shape
    
    # Convert frame to RGB
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    
    # Process frame with hand detector
    output = hand_detector.process(rgb_frame)
    hands = output.multi_hand_landmarks
    
    if hands:
        for hand in hands:
            # Get landmarks for thumb (landmark ID: 4) and index finger (landmark ID: 8)
            landmarks = hand.landmark
            for id, landmark in enumerate(landmarks):
                x = int(landmark.x * frame_width)
                y = int(landmark.y * frame_height)
                
                # Update thumb coordinates
                if id == 4:
                    thumb_x = x
                    thumb_y = y
                    
                # Update index finger coordinates
                if id == 8:
                    index_x = x
                    index_y = y
                    
            # Move cursor with thumb and index fingers
            pyautogui.moveTo((index_x + thumb_x) // 2 * screen_width // frame_width, 
                             (index_y + thumb_y) // 2 * screen_height // frame_height)
            
            # Trigger click action when thumb and index fingers are brought together
            if abs(index_x - thumb_x) < 50 and abs(index_y - thumb_y) < 50:
                if not click_flag:
                    pyautogui.click()
                    click_flag = True
            else:
                click_flag = False

            # Mark thumb
            cv2.circle(img=frame, center=(thumb_x, thumb_y), radius=10, color=(0, 255, 255), thickness=-1)
            
            # Mark index finger
            cv2.circle(img=frame, center=(index_x, index_y), radius=10, color=(0, 255, 255), thickness=-1)

    # Display frame with cursor
    cv2.imshow('Virtual Mouse', frame)
    
    # Exit loop when 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release VideoCapture and close all OpenCV windows
cap.release()
cv2.destroyAllWindows()
